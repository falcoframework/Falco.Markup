module Falco.Tests.Attr

open System
open Falco.Markup
open FsUnit.Xunit
open Xunit

[<Fact>]
let ``Attr.valueString should invoke ToString member with no parameters`` () =
    Attr.valueString 1 |> should equal <| Attr.value "1"

[<Fact>]
let ``Attr.valueStringf should invoke ToString member with format parameter`` () =
    Attr.valueStringf "F2" 1.2345 |> should equal <| Attr.value "1.23"

[<Fact>]
let ``Attr.value{Type} should produce expected string`` () =
    let dt = (DateTime(1986,12,12,5,30,0))
    Attr.valueDate dt |> should equal <| Attr.value "1986-12-12"
    Attr.valueDatetimeLocal dt |> should equal <| Attr.value "1986-12-12T05:30:00"
    Attr.valueMonth dt |> should equal <| Attr.value "1986-12"
    Attr.valueTime (TimeSpan(12,12,0)) |> should equal <| Attr.value "12:12"
    Attr.valueWeek dt |> should equal <| Attr.value "1986-W50"

[<Fact>]
let ``Attr.valueOption + Attr.value{Type} should produce expected attribute`` () =
    let dt = Some (DateTime(1986,12,12,5,30,0))
    Attr.valueOption Attr.valueDate dt |> should equal <| Attr.value "1986-12-12"
    Attr.valueOption Attr.valueDatetimeLocal dt |> should equal <| Attr.value "1986-12-12T05:30:00"
    Attr.valueOption Attr.valueDate None |> should equal <| Attr.valueEmpty
    Attr.valueOption Attr.valueDatetimeLocal None |> should equal <| Attr.valueEmpty


[<Fact>]
let ``Attr.merge should combine two XmlAttribute lists`` () =
    Attr.merge
        [ Attr.class' "ma2"; Attr.id "el" ]
        [ Attr.id "some-el"; Attr.class' "bg-red"; Attr.readonly ]
    |> should equal [ Attr.class' "ma2 bg-red"; Attr.id "some-el"; Attr.readonly ]

[<Fact>]
let ``Attr.merge should work with bogus "class" NonValueAttr`` () =
    Attr.merge
        [ Attr.class' "ma2" ]
        [ Attr.id "some-el"; Attr.class' "bg-red"; NonValueAttr("class") ]
    |> should equal [ Attr.class' "ma2 bg-red"; Attr.id "some-el" ]

[<Fact>]
let ``Attr.merge should combine two XmlAttribute lists factoring additive attributes`` () =
    Attr.merge
        [ Attr.name "test"; Attr.class' "ma2"; Attr.style "background: red"; Attr.accept "image/jpeg" ]
        [ Attr.name "expected"; Attr.class' "pa2"; Attr.style "color: white"; Attr.accept "image/png" ]
    |> should equal [ Attr.name "expected"; Attr.class' "ma2 pa2"; Attr.style "background: red; color: white"; Attr.accept "image/jpeg, image/png" ]

[<Fact>]
let ``HTML Spec`` () =
    Elem.div [ Attr.accept "falco" ] [] |> renderNode |> should equal "<div accept=\"falco\"></div>"
    Elem.div [ Attr.acceptCharset "falco" ] [] |> renderNode |> should equal "<div accept-charset=\"falco\"></div>"
    Elem.div [ Attr.accesskey "falco" ] [] |> renderNode |> should equal "<div accesskey=\"falco\"></div>"
    Elem.div [ Attr.action "falco" ] [] |> renderNode |> should equal "<div action=\"falco\"></div>"
    Elem.div [ Attr.align "falco" ] [] |> renderNode |> should equal "<div align=\"falco\"></div>"
    Elem.div [ Attr.allow "falco" ] [] |> renderNode |> should equal "<div allow=\"falco\"></div>"
    Elem.div [ Attr.alt "falco" ] [] |> renderNode |> should equal "<div alt=\"falco\"></div>"
    Elem.div [ Attr.async ] [] |> renderNode |> should equal "<div async></div>"
    Elem.div [ Attr.autocapitalize "falco" ] [] |> renderNode |> should equal "<div autocapitalize=\"falco\"></div>"
    Elem.div [ Attr.autocomplete "falco" ] [] |> renderNode |> should equal "<div autocomplete=\"falco\"></div>"
    Elem.div [ Attr.autofocus ] [] |> renderNode |> should equal "<div autofocus></div>"
    Elem.div [ Attr.autoplay ] [] |> renderNode |> should equal "<div autoplay></div>"
    Elem.div [ Attr.background "falco" ] [] |> renderNode |> should equal "<div background=\"falco\"></div>"
    Elem.div [ Attr.bgcolor "falco" ] [] |> renderNode |> should equal "<div bgcolor=\"falco\"></div>"
    Elem.div [ Attr.border "falco" ] [] |> renderNode |> should equal "<div border=\"falco\"></div>"
    Elem.div [ Attr.buffered "falco" ] [] |> renderNode |> should equal "<div buffered=\"falco\"></div>"
    Elem.div [ Attr.capture "falco" ] [] |> renderNode |> should equal "<div capture=\"falco\"></div>"
    Elem.div [ Attr.challenge "falco" ] [] |> renderNode |> should equal "<div challenge=\"falco\"></div>"
    Elem.div [ Attr.charset "falco" ] [] |> renderNode |> should equal "<div charset=\"falco\"></div>"
    Elem.div [ Attr.checked' ] [] |> renderNode |> should equal "<div checked></div>"
    Elem.div [ Attr.cite "falco" ] [] |> renderNode |> should equal "<div cite=\"falco\"></div>"
    Elem.div [ Attr.class' "falco" ] [] |> renderNode |> should equal "<div class=\"falco\"></div>"
    Elem.div [ Attr.code "falco" ] [] |> renderNode |> should equal "<div code=\"falco\"></div>"
    Elem.div [ Attr.codebase "falco" ] [] |> renderNode |> should equal "<div codebase=\"falco\"></div>"
    Elem.div [ Attr.color "falco" ] [] |> renderNode |> should equal "<div color=\"falco\"></div>"
    Elem.div [ Attr.cols "falco" ] [] |> renderNode |> should equal "<div cols=\"falco\"></div>"
    Elem.div [ Attr.colspan "falco" ] [] |> renderNode |> should equal "<div colspan=\"falco\"></div>"
    Elem.div [ Attr.content "falco" ] [] |> renderNode |> should equal "<div content=\"falco\"></div>"
    Elem.div [ Attr.contenteditable "falco" ] [] |> renderNode |> should equal "<div contenteditable=\"falco\"></div>"
    Elem.div [ Attr.contextmenu "falco" ] [] |> renderNode |> should equal "<div contextmenu=\"falco\"></div>"
    Elem.div [ Attr.controls ] [] |> renderNode |> should equal "<div controls></div>"
    Elem.div [ Attr.coords "falco" ] [] |> renderNode |> should equal "<div coords=\"falco\"></div>"
    Elem.div [ Attr.crossorigin "falco" ] [] |> renderNode |> should equal "<div crossorigin=\"falco\"></div>"
    Elem.div [ Attr.csp "falco" ] [] |> renderNode |> should equal "<div csp=\"falco\"></div>"
    Elem.div [ Attr.data "falco" ] [] |> renderNode |> should equal "<div data=\"falco\"></div>"
    Elem.div [ Attr.dataAttr "value" "falco" ] [] |> renderNode |> should equal "<div data-value=\"falco\"></div>"
    Elem.div [ Attr.datetime "falco" ] [] |> renderNode |> should equal "<div datetime=\"falco\"></div>"
    Elem.div [ Attr.decoding "falco" ] [] |> renderNode |> should equal "<div decoding=\"falco\"></div>"
    Elem.div [ Attr.default' ] [] |> renderNode |> should equal "<div default></div>"
    Elem.div [ Attr.defer ] [] |> renderNode |> should equal "<div defer></div>"
    Elem.div [ Attr.dir "falco" ] [] |> renderNode |> should equal "<div dir=\"falco\"></div>"
    Elem.div [ Attr.dirname "falco" ] [] |> renderNode |> should equal "<div dirname=\"falco\"></div>"
    Elem.div [ Attr.disabled ] [] |> renderNode |> should equal "<div disabled></div>"
    Elem.div [ Attr.download "falco" ] [] |> renderNode |> should equal "<div download=\"falco\"></div>"
    Elem.div [ Attr.draggable "falco" ] [] |> renderNode |> should equal "<div draggable=\"falco\"></div>"
    Elem.div [ Attr.enctype "falco" ] [] |> renderNode |> should equal "<div enctype=\"falco\"></div>"
    Elem.div [ Attr.enterkeyhint "falco" ] [] |> renderNode |> should equal "<div enterkeyhint=\"falco\"></div>"
    Elem.div [ Attr.for' "falco" ] [] |> renderNode |> should equal "<div for=\"falco\"></div>"
    Elem.div [ Attr.form "falco" ] [] |> renderNode |> should equal "<div form=\"falco\"></div>"
    Elem.div [ Attr.formaction "falco" ] [] |> renderNode |> should equal "<div formaction=\"falco\"></div>"
    Elem.div [ Attr.formenctype "falco" ] [] |> renderNode |> should equal "<div formenctype=\"falco\"></div>"
    Elem.div [ Attr.formmethod "falco" ] [] |> renderNode |> should equal "<div formmethod=\"falco\"></div>"
    Elem.div [ Attr.formnovalidate ] [] |> renderNode |> should equal "<div formnovalidate></div>"
    Elem.div [ Attr.formtarget "falco" ] [] |> renderNode |> should equal "<div formtarget=\"falco\"></div>"
    Elem.div [ Attr.headers "falco" ] [] |> renderNode |> should equal "<div headers=\"falco\"></div>"
    Elem.div [ Attr.height "falco" ] [] |> renderNode |> should equal "<div height=\"falco\"></div>"
    Elem.div [ Attr.hidden ] [] |> renderNode |> should equal "<div hidden></div>"
    Elem.div [ Attr.high "falco" ] [] |> renderNode |> should equal "<div high=\"falco\"></div>"
    Elem.div [ Attr.href "falco" ] [] |> renderNode |> should equal "<div href=\"falco\"></div>"
    Elem.div [ Attr.hreflang "falco" ] [] |> renderNode |> should equal "<div hreflang=\"falco\"></div>"
    Elem.div [ Attr.httpEquiv "falco" ] [] |> renderNode |> should equal "<div http-equiv=\"falco\"></div>"
    Elem.div [ Attr.icon "falco" ] [] |> renderNode |> should equal "<div icon=\"falco\"></div>"
    Elem.div [ Attr.id "falco" ] [] |> renderNode |> should equal "<div id=\"falco\"></div>"
    Elem.div [ Attr.importance "falco" ] [] |> renderNode |> should equal "<div importance=\"falco\"></div>"
    Elem.div [ Attr.integrity "falco" ] [] |> renderNode |> should equal "<div integrity=\"falco\"></div>"
    Elem.div [ Attr.inputmode "falco" ] [] |> renderNode |> should equal "<div inputmode=\"falco\"></div>"
    Elem.div [ Attr.ismap ] [] |> renderNode |> should equal "<div ismap></div>"
    Elem.div [ Attr.itemprop "falco" ] [] |> renderNode |> should equal "<div itemprop=\"falco\"></div>"
    Elem.div [ Attr.keytype "falco" ] [] |> renderNode |> should equal "<div keytype=\"falco\"></div>"
    Elem.div [ Attr.kind "falco" ] [] |> renderNode |> should equal "<div kind=\"falco\"></div>"
    Elem.div [ Attr.label "falco" ] [] |> renderNode |> should equal "<div label=\"falco\"></div>"
    Elem.div [ Attr.lang "falco" ] [] |> renderNode |> should equal "<div lang=\"falco\"></div>"
    Elem.div [ Attr.loading "falco" ] [] |> renderNode |> should equal "<div loading=\"falco\"></div>"
    Elem.div [ Attr.list "falco" ] [] |> renderNode |> should equal "<div list=\"falco\"></div>"
    Elem.div [ Attr.loop ] [] |> renderNode |> should equal "<div loop></div>"
    Elem.div [ Attr.low "falco" ] [] |> renderNode |> should equal "<div low=\"falco\"></div>"
    Elem.div [ Attr.max "falco" ] [] |> renderNode |> should equal "<div max=\"falco\"></div>"
    Elem.div [ Attr.maxlength "falco" ] [] |> renderNode |> should equal "<div maxlength=\"falco\"></div>"
    Elem.div [ Attr.minlength "falco" ] [] |> renderNode |> should equal "<div minlength=\"falco\"></div>"
    Elem.div [ Attr.media "falco" ] [] |> renderNode |> should equal "<div media=\"falco\"></div>"
    Elem.div [ Attr.method "falco" ] [] |> renderNode |> should equal "<div method=\"falco\"></div>"
    Elem.div [ Attr.min "falco" ] [] |> renderNode |> should equal "<div min=\"falco\"></div>"
    Elem.div [ Attr.multiple ] [] |> renderNode |> should equal "<div multiple></div>"
    Elem.div [ Attr.muted ] [] |> renderNode |> should equal "<div muted></div>"
    Elem.div [ Attr.name "falco" ] [] |> renderNode |> should equal "<div name=\"falco\"></div>"
    Elem.div [ Attr.novalidate ] [] |> renderNode |> should equal "<div novalidate></div>"
    Elem.div [ Attr.open' "falco" ] [] |> renderNode |> should equal "<div open=\"falco\"></div>"
    Elem.div [ Attr.optimum "falco" ] [] |> renderNode |> should equal "<div optimum=\"falco\"></div>"
    Elem.div [ Attr.pattern "falco" ] [] |> renderNode |> should equal "<div pattern=\"falco\"></div>"
    Elem.div [ Attr.ping "falco" ] [] |> renderNode |> should equal "<div ping=\"falco\"></div>"
    Elem.div [ Attr.placeholder "falco" ] [] |> renderNode |> should equal "<div placeholder=\"falco\"></div>"
    Elem.div [ Attr.poster "falco" ] [] |> renderNode |> should equal "<div poster=\"falco\"></div>"
    Elem.div [ Attr.preload "falco" ] [] |> renderNode |> should equal "<div preload=\"falco\"></div>"
    Elem.div [ Attr.radiogroup "falco" ] [] |> renderNode |> should equal "<div radiogroup=\"falco\"></div>"
    Elem.div [ Attr.readonly ] [] |> renderNode |> should equal "<div readonly></div>"
    Elem.div [ Attr.referrerpolicy "falco" ] [] |> renderNode |> should equal "<div referrerpolicy=\"falco\"></div>"
    Elem.div [ Attr.rel "falco" ] [] |> renderNode |> should equal "<div rel=\"falco\"></div>"
    Elem.div [ Attr.required ] [] |> renderNode |> should equal "<div required></div>"
    Elem.div [ Attr.reversed ] [] |> renderNode |> should equal "<div reversed></div>"
    Elem.div [ Attr.role "falco" ] [] |> renderNode |> should equal "<div role=\"falco\"></div>"
    Elem.div [ Attr.rows "falco" ] [] |> renderNode |> should equal "<div rows=\"falco\"></div>"
    Elem.div [ Attr.rowspan "falco" ] [] |> renderNode |> should equal "<div rowspan=\"falco\"></div>"
    Elem.div [ Attr.sandbox "falco" ] [] |> renderNode |> should equal "<div sandbox=\"falco\"></div>"
    Elem.div [ Attr.scope "falco" ] [] |> renderNode |> should equal "<div scope=\"falco\"></div>"
    Elem.div [ Attr.selected ] [] |> renderNode |> should equal "<div selected></div>"
    Elem.div [ Attr.shape "falco" ] [] |> renderNode |> should equal "<div shape=\"falco\"></div>"
    Elem.div [ Attr.size "falco" ] [] |> renderNode |> should equal "<div size=\"falco\"></div>"
    Elem.div [ Attr.sizes "falco" ] [] |> renderNode |> should equal "<div sizes=\"falco\"></div>"
    Elem.div [ Attr.slot "falco" ] [] |> renderNode |> should equal "<div slot=\"falco\"></div>"
    Elem.div [ Attr.span "falco" ] [] |> renderNode |> should equal "<div span=\"falco\"></div>"
    Elem.div [ Attr.spellcheck "falco" ] [] |> renderNode |> should equal "<div spellcheck=\"falco\"></div>"
    Elem.div [ Attr.src "falco" ] [] |> renderNode |> should equal "<div src=\"falco\"></div>"
    Elem.div [ Attr.srcdoc "falco" ] [] |> renderNode |> should equal "<div srcdoc=\"falco\"></div>"
    Elem.div [ Attr.srclang "falco" ] [] |> renderNode |> should equal "<div srclang=\"falco\"></div>"
    Elem.div [ Attr.srcset "falco" ] [] |> renderNode |> should equal "<div srcset=\"falco\"></div>"
    Elem.div [ Attr.start "falco" ] [] |> renderNode |> should equal "<div start=\"falco\"></div>"
    Elem.div [ Attr.step "falco" ] [] |> renderNode |> should equal "<div step=\"falco\"></div>"
    Elem.div [ Attr.style "falco" ] [] |> renderNode |> should equal "<div style=\"falco\"></div>"
    Elem.div [ Attr.tabindex "falco" ] [] |> renderNode |> should equal "<div tabindex=\"falco\"></div>"
    Elem.div [ Attr.target "falco" ] [] |> renderNode |> should equal "<div target=\"falco\"></div>"
    Elem.div [ Attr.title "falco" ] [] |> renderNode |> should equal "<div title=\"falco\"></div>"
    Elem.div [ Attr.translate "falco" ] [] |> renderNode |> should equal "<div translate=\"falco\"></div>"
    Elem.div [ Attr.type' "falco" ] [] |> renderNode |> should equal "<div type=\"falco\"></div>"
    Elem.div [ Attr.usemap "falco" ] [] |> renderNode |> should equal "<div usemap=\"falco\"></div>"
    Elem.div [ Attr.value "falco" ] [] |> renderNode |> should equal "<div value=\"falco\"></div>"
    Elem.div [ Attr.width "falco" ] [] |> renderNode |> should equal "<div width=\"falco\"></div>"
    Elem.div [ Attr.wrap "falco" ] [] |> renderNode |> should equal "<div wrap=\"falco\"></div>"
    Elem.div [ Attr.onabort "falco" ] [] |> renderNode |> should equal "<div onabort=\"falco\"></div>"
    Elem.div [ Attr.onafterprint "falco" ] [] |> renderNode |> should equal "<div afterprint=\"falco\"></div>"
    Elem.div [ Attr.onanimationend "falco" ] [] |> renderNode |> should equal "<div animationend=\"falco\"></div>"
    Elem.div [ Attr.onanimationiteration "falco" ] [] |> renderNode |> should equal "<div animationiteration=\"falco\"></div>"
    Elem.div [ Attr.onanimationstart "falco" ] [] |> renderNode |> should equal "<div animationstart=\"falco\"></div>"
    Elem.div [ Attr.onbeforeprint "falco" ] [] |> renderNode |> should equal "<div beforeprint=\"falco\"></div>"
    Elem.div [ Attr.onbeforeunload "falco" ] [] |> renderNode |> should equal "<div beforeunload=\"falco\"></div>"
    Elem.div [ Attr.onblur "falco" ] [] |> renderNode |> should equal "<div onblur=\"falco\"></div>"
    Elem.div [ Attr.oncanplay "falco" ] [] |> renderNode |> should equal "<div oncanplay=\"falco\"></div>"
    Elem.div [ Attr.oncanplaythrough "falco" ] [] |> renderNode |> should equal "<div oncanplaythrough=\"falco\"></div>"
    Elem.div [ Attr.onchange "falco" ] [] |> renderNode |> should equal "<div onchange=\"falco\"></div>"
    Elem.div [ Attr.onclick "falco" ] [] |> renderNode |> should equal "<div onclick=\"falco\"></div>"
    Elem.div [ Attr.oncontextmenu "falco" ] [] |> renderNode |> should equal "<div oncontextmenu=\"falco\"></div>"
    Elem.div [ Attr.oncopy "falco" ] [] |> renderNode |> should equal "<div copy=\"falco\"></div>"
    Elem.div [ Attr.oncut "falco" ] [] |> renderNode |> should equal "<div cut=\"falco\"></div>"
    Elem.div [ Attr.ondblclick "falco" ] [] |> renderNode |> should equal "<div ondblclick=\"falco\"></div>"
    Elem.div [ Attr.ondrag "falco" ] [] |> renderNode |> should equal "<div ondrag=\"falco\"></div>"
    Elem.div [ Attr.ondragend "falco" ] [] |> renderNode |> should equal "<div ondragend=\"falco\"></div>"
    Elem.div [ Attr.ondragenter "falco" ] [] |> renderNode |> should equal "<div ondragenter=\"falco\"></div>"
    Elem.div [ Attr.ondragleave "falco" ] [] |> renderNode |> should equal "<div ondragleave=\"falco\"></div>"
    Elem.div [ Attr.ondragover "falco" ] [] |> renderNode |> should equal "<div ondragover=\"falco\"></div>"
    Elem.div [ Attr.ondragstart "falco" ] [] |> renderNode |> should equal "<div ondragstart=\"falco\"></div>"
    Elem.div [ Attr.ondrop "falco" ] [] |> renderNode |> should equal "<div ondrop=\"falco\"></div>"
    Elem.div [ Attr.ondurationchange "falco" ] [] |> renderNode |> should equal "<div ondurationchange=\"falco\"></div>"
    Elem.div [ Attr.onemptied "falco" ] [] |> renderNode |> should equal "<div onemptied=\"falco\"></div>"
    Elem.div [ Attr.onended "falco" ] [] |> renderNode |> should equal "<div onended=\"falco\"></div>"
    Elem.div [ Attr.onerror "falco" ] [] |> renderNode |> should equal "<div onerror=\"falco\"></div>"
    Elem.div [ Attr.onfocus "falco" ] [] |> renderNode |> should equal "<div onfocus=\"falco\"></div>"
    Elem.div [ Attr.onformchange "falco" ] [] |> renderNode |> should equal "<div onformchange=\"falco\"></div>"
    Elem.div [ Attr.onforminput "falco" ] [] |> renderNode |> should equal "<div onforminput=\"falco\"></div>"
    Elem.div [ Attr.onfocusin "falco" ] [] |> renderNode |> should equal "<div focusin=\"falco\"></div>"
    Elem.div [ Attr.onfocusout "falco" ] [] |> renderNode |> should equal "<div focusout=\"falco\"></div>"
    Elem.div [ Attr.onfullscreenchange "falco" ] [] |> renderNode |> should equal "<div fullscreenchange=\"falco\"></div>"
    Elem.div [ Attr.onfullscreenerror "falco" ] [] |> renderNode |> should equal "<div fullscreenerror=\"falco\"></div>"
    Elem.div [ Attr.onhashchange "falco" ] [] |> renderNode |> should equal "<div hashchange=\"falco\"></div>"
    Elem.div [ Attr.oninput "falco" ] [] |> renderNode |> should equal "<div oninput=\"falco\"></div>"
    Elem.div [ Attr.oninvalid "falco" ] [] |> renderNode |> should equal "<div oninvalid=\"falco\"></div>"
    Elem.div [ Attr.onkeydown "falco" ] [] |> renderNode |> should equal "<div onkeydown=\"falco\"></div>"
    Elem.div [ Attr.onkeypress "falco" ] [] |> renderNode |> should equal "<div onkeypress=\"falco\"></div>"
    Elem.div [ Attr.onkeyup "falco" ] [] |> renderNode |> should equal "<div onkeyup=\"falco\"></div>"
    Elem.div [ Attr.onload "falco" ] [] |> renderNode |> should equal "<div onload=\"falco\"></div>"
    Elem.div [ Attr.onloadeddata "falco" ] [] |> renderNode |> should equal "<div onloadeddata=\"falco\"></div>"
    Elem.div [ Attr.onloadedmetadata "falco" ] [] |> renderNode |> should equal "<div onloadedmetadata=\"falco\"></div>"
    Elem.div [ Attr.onloadstart "falco" ] [] |> renderNode |> should equal "<div onloadstart=\"falco\"></div>"
    Elem.div [ Attr.onmessage "falco" ] [] |> renderNode |> should equal "<div message=\"falco\"></div>"
    Elem.div [ Attr.onmousedown "falco" ] [] |> renderNode |> should equal "<div onmousedown=\"falco\"></div>"
    Elem.div [ Attr.onmouseenter "falco" ] [] |> renderNode |> should equal "<div onmouseenter=\"falco\"></div>"
    Elem.div [ Attr.onmouseleave "falco" ] [] |> renderNode |> should equal "<div onmouseleave=\"falco\"></div>"
    Elem.div [ Attr.onmousemove "falco" ] [] |> renderNode |> should equal "<div onmousemove=\"falco\"></div>"
    Elem.div [ Attr.onmouseover "falco" ] [] |> renderNode |> should equal "<div onmouseover=\"falco\"></div>"
    Elem.div [ Attr.onmouseout "falco" ] [] |> renderNode |> should equal "<div onmouseout=\"falco\"></div>"
    Elem.div [ Attr.onmouseup "falco" ] [] |> renderNode |> should equal "<div onmouseup=\"falco\"></div>"
    Elem.div [ Attr.onmousewheel "falco" ] [] |> renderNode |> should equal "<div onmousewheel=\"falco\"></div>"
    Elem.div [ Attr.onoffline "falco" ] [] |> renderNode |> should equal "<div offline=\"falco\"></div>"
    Elem.div [ Attr.ononline "falco" ] [] |> renderNode |> should equal "<div online=\"falco\"></div>"
    Elem.div [ Attr.onopen "falco" ] [] |> renderNode |> should equal "<div open=\"falco\"></div>"
    Elem.div [ Attr.onpagehide "falco" ] [] |> renderNode |> should equal "<div pagehide=\"falco\"></div>"
    Elem.div [ Attr.onpageshow "falco" ] [] |> renderNode |> should equal "<div pageshow=\"falco\"></div>"
    Elem.div [ Attr.onpaste "falco" ] [] |> renderNode |> should equal "<div paste=\"falco\"></div>"
    Elem.div [ Attr.onpause "falco" ] [] |> renderNode |> should equal "<div onpause=\"falco\"></div>"
    Elem.div [ Attr.onplay "falco" ] [] |> renderNode |> should equal "<div onplay=\"falco\"></div>"
    Elem.div [ Attr.onplaying "falco" ] [] |> renderNode |> should equal "<div onplaying=\"falco\"></div>"
    Elem.div [ Attr.onpopstate "falco" ] [] |> renderNode |> should equal "<div popstate=\"falco\"></div>"
    Elem.div [ Attr.onprogress "falco" ] [] |> renderNode |> should equal "<div onprogress=\"falco\"></div>"
    Elem.div [ Attr.onratechange "falco" ] [] |> renderNode |> should equal "<div onratechange=\"falco\"></div>"
    Elem.div [ Attr.onresize "falco" ] [] |> renderNode |> should equal "<div onresize=\"falco\"></div>"
    Elem.div [ Attr.onreset "falco" ] [] |> renderNode |> should equal "<div onreset=\"falco\"></div>"
    Elem.div [ Attr.onscroll "falco" ] [] |> renderNode |> should equal "<div onscroll=\"falco\"></div>"
    Elem.div [ Attr.onsearch "falco" ] [] |> renderNode |> should equal "<div search=\"falco\"></div>"
    Elem.div [ Attr.onseeked "falco" ] [] |> renderNode |> should equal "<div onseeked=\"falco\"></div>"
    Elem.div [ Attr.onseeking "falco" ] [] |> renderNode |> should equal "<div onseeking=\"falco\"></div>"
    Elem.div [ Attr.onselect "falco" ] [] |> renderNode |> should equal "<div onselect=\"falco\"></div>"
    Elem.div [ Attr.onshow "falco" ] [] |> renderNode |> should equal "<div onshow=\"falco\"></div>"
    Elem.div [ Attr.onstalled "falco" ] [] |> renderNode |> should equal "<div onstalled=\"falco\"></div>"
    Elem.div [ Attr.onstorage "falco" ] [] |> renderNode |> should equal "<div storage=\"falco\"></div>"
    Elem.div [ Attr.onsubmit "falco" ] [] |> renderNode |> should equal "<div onsubmit=\"falco\"></div>"
    Elem.div [ Attr.onsuspend "falco" ] [] |> renderNode |> should equal "<div onsuspend=\"falco\"></div>"
    Elem.div [ Attr.ontimeupdate "falco" ] [] |> renderNode |> should equal "<div ontimeupdate=\"falco\"></div>"
    Elem.div [ Attr.ontoggle "falco" ] [] |> renderNode |> should equal "<div toggle=\"falco\"></div>"
    Elem.div [ Attr.ontouchcancel "falco" ] [] |> renderNode |> should equal "<div touchcancel=\"falco\"></div>"
    Elem.div [ Attr.ontouchend "falco" ] [] |> renderNode |> should equal "<div touchend=\"falco\"></div>"
    Elem.div [ Attr.ontouchmove "falco" ] [] |> renderNode |> should equal "<div touchmove=\"falco\"></div>"
    Elem.div [ Attr.ontouchstart "falco" ] [] |> renderNode |> should equal "<div touchstart=\"falco\"></div>"
    Elem.div [ Attr.ontransitionend "falco" ] [] |> renderNode |> should equal "<div transitionend=\"falco\"></div>"
    Elem.div [ Attr.onunload "falco" ] [] |> renderNode |> should equal "<div unload=\"falco\"></div>"
    Elem.div [ Attr.onvolumechange "falco" ] [] |> renderNode |> should equal "<div onvolumechange=\"falco\"></div>"
    Elem.div [ Attr.onwaiting "falco" ] [] |> renderNode |> should equal "<div onwaiting=\"falco\"></div>"
    Elem.div [ Attr.onwheel "falco" ] [] |> renderNode |> should equal "<div wheel=\"falco\"></div>"
